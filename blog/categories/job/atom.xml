<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: job | Automate All the Things!]]></title>
  <link href="http://dougireton.github.io/blog/categories/job/atom.xml" rel="self"/>
  <link href="http://dougireton.github.io/"/>
  <updated>2013-05-21T22:16:33-07:00</updated>
  <id>http://dougireton.github.io/</id>
  <author>
    <name><![CDATA[Doug Ireton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Will you join us?]]></title>
    <link href="http://dougireton.github.io/blog/2013/04/14/will-you-join-us/"/>
    <updated>2013-04-14T21:00:00-07:00</updated>
    <id>http://dougireton.github.io/blog/2013/04/14/will-you-join-us</id>
    <content type="html"><![CDATA[<p>Ohai Chefs!</p>

<p>This week, the week before Chef Conf, I&rsquo;d like to talk a bit about our team and our culture, and invite you to join us.</p>

<h2>tl;dr</h2>

<p>Here&rsquo;s our job posting for a spot on our <a href="https://nordstrom.taleo.net/careersection/2/jobdetail.ftl?job=292465">Infrastructure Engineering team</a>, which I hope you&rsquo;ll read, but I also hope you&rsquo;ll read on to get a personal feel for our team and the huge cultural shift happening right now at Nordstrom.</p>

<!--more-->


<p>I&rsquo;ve been working at Nordstrom for five years, first on the Windows Server Engineering team, then on Nordstrom.com as a developer, then as a build engineer, and finally on the Infrastructure Engineering team as a developer, working with Chef everyday. Up until very recently, Nordstrom has run a pretty traditional IT shop, big, heavily-planned projects, a preference for expensive, complicated vendor tools (Oracle, CA, Microsoft, BMC, etc) and siloed teams. I hope you&rsquo;ll see in a minute that we are taking real steps to become more agile, embrace open source tools, and become more cross-disipline, but first, a story.</p>

<h2>Follow your heart</h2>

<p>Three and a half years ago I had my normal performance review and, at the end of it my manager, Andrea, asked me about career goals/aspirations. I told her that I really wanted to be a developer. I had been playing around with Rails at home and really enjoyed it. Even though I was not qualified to be a &ldquo;real&rdquo; developer, she encouraged me to have coffee with Gina, one of the development managers for Nordstrom.com. Nordstrom has a very relational culture and &ldquo;having coffee&rdquo; is how you build important relatinoships. After having coffee with Gina, I had coffee with another dev manager, a project manager, and three other Nordstrom.com web developers. I&rsquo;m sure they went easy on me and thankfully, I didn&rsquo;t have to write a linked list pseudo-code implemtation on the whiteboard since I don&rsquo;t even have a CS degree. After about six months of time where I wrapped up my Windows Server Engineering projects, and tried to read up on web development, I moved over to the Nordstrom.com dev team.</p>

<p>The dev team had been thinking about how to incorporate me into the team without too much disruption, and they paired me up with a mentor, an experienced dev who was very good at teaching and pointing me in the right direction. I also bought a couple of C# books and started reading like crazy. I felt way out of my depth when I was assigned my first feature, but Tim, my mentor outlined all the places in the code I&rsquo;d need to make changes and patiently answered all my implmentation questions. I felt quite a sense of pride when my feature shipped four months later.</p>

<h2>Four months later?</h2>

<p>Wait, four months later? One of the big frustrations we had was that actually deploying code to production web servers was so difficult. Features were bundled into big 4-5 month project releases and cross-team code merges were saved unti the end of the project, which caused all the problems you may imagine. After working on the dev team for five months, I had the opportunity to move to a newly forming team focused on fixing our build and deployment process. I&rsquo;ll gloss over my time as a build engineer, but out of it I got a better understanding of how complicated it is to deliver reliable and consistent builds to prod on a regular basis. Also in that time, the dev teams decided to move to a three-week cadence for prod deployments instead of 4-5 months which was a huge change.</p>

<h2>Chef and Infrastruture Engineering</h2>

<p>During my tenure as a build engineer, we started to evaluate Chef.</p>
]]></content>
  </entry>
  
</feed>
